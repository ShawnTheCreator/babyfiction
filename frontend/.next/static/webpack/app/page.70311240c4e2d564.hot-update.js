"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/lib/api.ts":
/*!************************!*\
  !*** ./src/lib/api.ts ***!
  \************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   fetchForm: function() { return /* binding */ fetchForm; },\n/* harmony export */   fetchJson: function() { return /* binding */ fetchJson; },\n/* harmony export */   getAuthToken: function() { return /* binding */ getAuthToken; },\n/* harmony export */   setAuthToken: function() { return /* binding */ setAuthToken; }\n/* harmony export */ });\n/* provided dependency */ var process = __webpack_require__(/*! process */ \"(app-pages-browser)/./node_modules/next/dist/build/polyfills/process.js\");\nconst API_URL = process.env.NEXT_PUBLIC_API_URL || \"https://babyfiction.onrender.com\";\nfunction getAuthToken() {\n    try {\n        if (false) {}\n        return localStorage.getItem(\"bf_token\");\n    } catch (e) {\n        return null;\n    }\n}\nfunction setAuthToken(token) {\n    try {\n        if (false) {}\n        if (token) localStorage.setItem(\"bf_token\", token);\n        else localStorage.removeItem(\"bf_token\");\n    } catch (e) {}\n}\nasync function fetchJson(path, init) {\n    const token = getAuthToken();\n    const res = await fetch(\"\".concat(API_URL).concat(path), {\n        ...init,\n        headers: {\n            \"Content-Type\": \"application/json\",\n            ...token ? {\n                Authorization: \"Bearer \".concat(token)\n            } : {},\n            ...(init === null || init === void 0 ? void 0 : init.headers) || {}\n        },\n        cache: \"no-store\",\n        credentials: \"include\"\n    });\n    if (!res.ok) {\n        let msg = \"\";\n        try {\n            const data = await res.json();\n            msg = (data === null || data === void 0 ? void 0 : data.message) || (data === null || data === void 0 ? void 0 : data.error) || (Array.isArray(data === null || data === void 0 ? void 0 : data.errors) ? data.errors.map((e)=>e.msg || e.message).join(\", \") : \"\");\n        } catch (e) {\n            try {\n                msg = await res.text();\n            } catch (e) {\n                msg = \"\";\n            }\n        }\n        const err = new Error(msg || \"Request failed: \".concat(res.status));\n        err.status = res.status;\n        throw err;\n    }\n    return res.json();\n}\nasync function fetchForm(path, form, init) {\n    const token = getAuthToken();\n    const res = await fetch(\"\".concat(API_URL).concat(path), {\n        method: \"POST\",\n        body: form,\n        cache: \"no-store\",\n        credentials: \"include\",\n        headers: {\n            ...token ? {\n                Authorization: \"Bearer \".concat(token)\n            } : {},\n            ...(init === null || init === void 0 ? void 0 : init.headers) || {}\n        },\n        ...init || {}\n    });\n    if (!res.ok) {\n        let msg = \"\";\n        try {\n            const data = await res.json();\n            msg = (data === null || data === void 0 ? void 0 : data.message) || (data === null || data === void 0 ? void 0 : data.error) || (Array.isArray(data === null || data === void 0 ? void 0 : data.errors) ? data.errors.map((e)=>e.msg || e.message).join(\", \") : \"\");\n        } catch (e) {\n            try {\n                msg = await res.text();\n            } catch (e) {\n                msg = \"\";\n            }\n        }\n        const err = new Error(msg || \"Request failed: \".concat(res.status));\n        err.status = res.status;\n        throw err;\n    }\n    return res.json();\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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TSxJQUFJTixLQUFLTSxNQUFNLENBQUNDLEdBQUcsQ0FBQyxDQUFDQyxJQUFXQSxFQUFFVCxHQUFHLElBQUlTLEVBQUVOLE9BQU8sRUFBRU8sSUFBSSxDQUFDLFFBQVEsRUFBQztRQUNySSxFQUFFLFVBQU07WUFDTixJQUFJO2dCQUFFVixNQUFNLE1BQU1QLElBQUlrQixJQUFJO1lBQUksRUFBRSxVQUFNO2dCQUFFWCxNQUFNO1lBQUk7UUFDcEQ7UUFDQSxNQUFNWSxNQUFXLElBQUlDLE1BQU1iLE9BQU8sbUJBQThCLE9BQVhQLElBQUlxQixNQUFNO1FBQy9ERixJQUFJRSxNQUFNLEdBQUdyQixJQUFJcUIsTUFBTTtRQUN2QixNQUFNRjtJQUNSO0lBQ0EsT0FBT25CLElBQUlTLElBQUk7QUFDakIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vc3JjL2xpYi9hcGkudHM/MmZhYiJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBBUElfVVJMID0gcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfQVBJX1VSTCB8fCAnaHR0cHM6Ly9iYWJ5ZmljdGlvbi5vbnJlbmRlci5jb20nO1xuXG5leHBvcnQgZnVuY3Rpb24gZ2V0QXV0aFRva2VuKCk6IHN0cmluZyB8IG51bGwge1xuICB0cnkge1xuICAgIGlmICh0eXBlb2Ygd2luZG93ID09PSAndW5kZWZpbmVkJykgcmV0dXJuIG51bGw7XG4gICAgcmV0dXJuIGxvY2FsU3RvcmFnZS5nZXRJdGVtKCdiZl90b2tlbicpO1xuICB9IGNhdGNoIHsgcmV0dXJuIG51bGw7IH1cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHNldEF1dGhUb2tlbih0b2tlbjogc3RyaW5nIHwgbnVsbCkge1xuICB0cnkge1xuICAgIGlmICh0eXBlb2Ygd2luZG93ID09PSAndW5kZWZpbmVkJykgcmV0dXJuO1xuICAgIGlmICh0b2tlbikgbG9jYWxTdG9yYWdlLnNldEl0ZW0oJ2JmX3Rva2VuJywgdG9rZW4pO1xuICAgIGVsc2UgbG9jYWxTdG9yYWdlLnJlbW92ZUl0ZW0oJ2JmX3Rva2VuJyk7XG4gIH0gY2F0Y2gge31cbn1cblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGZldGNoSnNvbjxUPihwYXRoOiBzdHJpbmcsIGluaXQ/OiBSZXF1ZXN0SW5pdCk6IFByb21pc2U8VD4ge1xuICBjb25zdCB0b2tlbiA9IGdldEF1dGhUb2tlbigpO1xuICBjb25zdCByZXMgPSBhd2FpdCBmZXRjaChgJHtBUElfVVJMfSR7cGF0aH1gLCB7XG4gICAgLi4uaW5pdCxcbiAgICBoZWFkZXJzOiB7XG4gICAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nLFxuICAgICAgLi4uKHRva2VuID8geyBBdXRob3JpemF0aW9uOiBgQmVhcmVyICR7dG9rZW59YCB9IDoge30pLFxuICAgICAgLi4uKGluaXQ/LmhlYWRlcnMgfHwge30pLFxuICAgIH0sXG4gICAgY2FjaGU6ICduby1zdG9yZScsXG4gICAgY3JlZGVudGlhbHM6ICdpbmNsdWRlJyxcbiAgfSk7XG4gIGlmICghcmVzLm9rKSB7XG4gICAgbGV0IG1zZyA9ICcnO1xuICAgIHRyeSB7XG4gICAgICBjb25zdCBkYXRhID0gYXdhaXQgcmVzLmpzb24oKTtcbiAgICAgIG1zZyA9IGRhdGE/Lm1lc3NhZ2UgfHwgZGF0YT8uZXJyb3IgfHwgKEFycmF5LmlzQXJyYXkoZGF0YT8uZXJyb3JzKSA/IGRhdGEuZXJyb3JzLm1hcCgoZTogYW55KSA9PiBlLm1zZyB8fCBlLm1lc3NhZ2UpLmpvaW4oJywgJykgOiAnJyk7XG4gICAgfSBjYXRjaCB7XG4gICAgICB0cnkgeyBtc2cgPSBhd2FpdCByZXMudGV4dCgpOyB9IGNhdGNoIHsgbXNnID0gJyc7IH1cbiAgICB9XG4gICAgY29uc3QgZXJyOiBhbnkgPSBuZXcgRXJyb3IobXNnIHx8IGBSZXF1ZXN0IGZhaWxlZDogJHtyZXMuc3RhdHVzfWApO1xuICAgIGVyci5zdGF0dXMgPSByZXMuc3RhdHVzO1xuICAgIHRocm93IGVycjtcbiAgfVxuICByZXR1cm4gcmVzLmpzb24oKTtcbn1cblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGZldGNoRm9ybTxUPihwYXRoOiBzdHJpbmcsIGZvcm06IEZvcm1EYXRhLCBpbml0PzogUmVxdWVzdEluaXQpOiBQcm9taXNlPFQ+IHtcbiAgY29uc3QgdG9rZW4gPSBnZXRBdXRoVG9rZW4oKTtcbiAgY29uc3QgcmVzID0gYXdhaXQgZmV0Y2goYCR7QVBJX1VSTH0ke3BhdGh9YCwge1xuICAgIG1ldGhvZDogJ1BPU1QnLFxuICAgIGJvZHk6IGZvcm0sXG4gICAgY2FjaGU6ICduby1zdG9yZScsXG4gICAgY3JlZGVudGlhbHM6ICdpbmNsdWRlJyxcbiAgICBoZWFkZXJzOiB7XG4gICAgICAuLi4odG9rZW4gPyB7IEF1dGhvcml6YXRpb246IGBCZWFyZXIgJHt0b2tlbn1gIH0gOiB7fSksXG4gICAgICAuLi4oaW5pdD8uaGVhZGVycyB8fCB7fSksXG4gICAgfSxcbiAgICAuLi4oaW5pdCB8fCB7fSksXG4gIH0pO1xuICBpZiAoIXJlcy5vaykge1xuICAgIGxldCBtc2cgPSAnJztcbiAgICB0cnkge1xuICAgICAgY29uc3QgZGF0YSA9IGF3YWl0IHJlcy5qc29uKCk7XG4gICAgICBtc2cgPSBkYXRhPy5tZXNzYWdlIHx8IGRhdGE/LmVycm9yIHx8IChBcnJheS5pc0FycmF5KGRhdGE/LmVycm9ycykgPyBkYXRhLmVycm9ycy5tYXAoKGU6IGFueSkgPT4gZS5tc2cgfHwgZS5tZXNzYWdlKS5qb2luKCcsICcpIDogJycpO1xuICAgIH0gY2F0Y2gge1xuICAgICAgdHJ5IHsgbXNnID0gYXdhaXQgcmVzLnRleHQoKTsgfSBjYXRjaCB7IG1zZyA9ICcnOyB9XG4gICAgfVxuICAgIGNvbnN0IGVycjogYW55ID0gbmV3IEVycm9yKG1zZyB8fCBgUmVxdWVzdCBmYWlsZWQ6ICR7cmVzLnN0YXR1c31gKTtcbiAgICBlcnIuc3RhdHVzID0gcmVzLnN0YXR1cztcbiAgICB0aHJvdyBlcnI7XG4gIH1cbiAgcmV0dXJuIHJlcy5qc29uKCk7XG59XG4iXSwibmFtZXMiOlsiQVBJX1VSTCIsInByb2Nlc3MiLCJlbnYiLCJORVhUX1BVQkxJQ19BUElfVVJMIiwiZ2V0QXV0aFRva2VuIiwibG9jYWxTdG9yYWdlIiwiZ2V0SXRlbSIsInNldEF1dGhUb2tlbiIsInRva2VuIiwic2V0SXRlbSIsInJlbW92ZUl0ZW0iLCJmZXRjaEpzb24iLCJwYXRoIiwiaW5pdCIsInJlcyIsImZldGNoIiwiaGVhZGVycyIsIkF1dGhvcml6YXRpb24iLCJjYWNoZSIsImNyZWRlbnRpYWxzIiwib2siLCJtc2ciLCJkYXRhIiwianNvbiIsIm1lc3NhZ2UiLCJlcnJvciIsIkFycmF5IiwiaXNBcnJheSIsImVycm9ycyIsIm1hcCIsImUiLCJqb2luIiwidGV4dCIsImVyciIsIkVycm9yIiwic3RhdHVzIiwiZmV0Y2hGb3JtIiwiZm9ybSIsIm1ldGhvZCIsImJvZHkiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/lib/api.ts\n"));

/***/ })

});